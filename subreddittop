#!/usr/bin/env ruby

require 'json'
require 'nokogiri'
require 'rss'

# Configure feed info
site_url = 'https://reddit.com/'
feed_title = 'Subreddit top post amalgamation'
feed_name = 'subreddittop'

feed_file = ENV['HOME'] + "/public_html/vitorgalvao/feeds/#{feed_name}.json"
feed_location = "https://vitorgalvao.com/feeds/#{feed_name}.json"

feed = {
  version: 'https://jsonfeed.org/version/1',
  title: feed_title,
  home_page_url: site_url,
  feed_url: feed_location
}

# Leave as is. Preparing the feed.
feed_new = {}
feed_new['items'] = []
feed_old = JSON.parse(File.read(feed_file)) rescue { 'items' => [] }
feed_old_first_url = feed_old['items'][0]['url'] rescue ''

# Strategy for getting new items
check_period = 'week'
subreddits = File.read(ENV['HOME'] + '/_vitor/dotsettings/subreddits').split("\n")

subreddits.each do |subreddit|
  site_url = 'https://www.reddit.com/r/' + subreddit + '/top.rss?t=' + check_period + '&limit=1'

  top_item = RSS::Parser.parse(URI.parse(site_url).open('User-Agent' => 'Mozilla/5.0 (X11; Linux x86_64)')).items.first
  item_url = top_item.link.href
  item_title = top_item.title.content

  feed_new['items'].push(title: item_title, id: item_url, url: item_url, content_html: 'From r/' + subreddit )
end

# If there are no new items, inform and exit
if feed_new['items'].empty?
  puts 'There are no new items to add'
  exit 0
end

# Prepend new items to the old and limit the amount of items
feed['items'] = (feed_new['items'] + feed_old['items']).first(100)

File.write(feed_file, JSON.pretty_generate(feed))
