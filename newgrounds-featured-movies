#!/usr/bin/env ruby

require 'json'
require 'net/http'
require 'nokogiri'
require 'pathname'

# Required environment variables
begin
  Feed_local_dir = Pathname(ENV['FEED_LOCAL_DIR'])
  Feed_web_dir = Pathname(ENV['FEED_WEB_DIR'])

  unless Feed_local_dir.directory? &&
         Feed_web_dir
    raise Errno::ENOENT
  end
rescue TypeError, Errno::ENOENT
  abort <<~ERROR
    Some required environment variables are not set correctly.
    Full list to verify:

    FEED_LOCAL_DIR: path to directory to read and write feed
    FEED_WEB_DIR: url to web directory hosting the feed
  ERROR
end

# Configure feed info
site_url = 'https://www.newgrounds.com/'
feed_title = 'Newgrounds Featured Movies'
feed_name = 'newgrounds-featured-movies'

feed_file = Feed_local_dir.join("#{feed_name}.json")
feed_location = Feed_web_dir.join("#{feed_name}.json")

feed = {
  version: 'https://jsonfeed.org/version/1',
  title: feed_title,
  home_page_url: site_url,
  feed_url: feed_location
}

# Leave as is. Preparing the feed.
feed_new = {}
feed_new['items'] = []
feed_old = JSON.parse(feed_file.read) rescue { 'items' => [] }
# DIFFERENT CASE FROM OTHER FEED SCRIPTS, DOES NOT NEED feed_old_first_url

# Strategy for getting new items
latest_issues = Nokogiri::HTML(Net::HTTP.get_response(URI.parse(site_url)).body).at('.pod-body .portalsubmission-icons').css('.span-1.align-center')

latest_issues.each do |issue|
  issue_url = issue.at('a').attr('href')
  issue_title = issue.at('.item-details > span').text
  issue_description = issue.at('.item-icon-hover').text.strip.split("\n").first.strip
  issue_img = issue.at('.item-icon-img > img').attr('src').split('?').first
  issue_content = "<img src='#{issue_img}'><p>#{issue_description}</p>"

  feed_new['items'].push(title: issue_title, id: issue_url, url: issue_url, content_html: issue_content)
end

# If there are no new items, inform and exit
if feed_new['items'].empty?
  puts 'There are no new items to add'
  exit 0
end

# Prepend new items to the old and limit the amount of items
feed['items'] = (feed_new['items'] + feed_old['items']).first(20)

feed_file.write(JSON.pretty_generate(feed))
