#!/usr/bin/env ruby

require 'nokogiri'
require 'open-uri'
require 'rss'

abort 'You need to set a "FEED_EXPORT_LOCATION" environment variable pointing to a writable directory' unless ENV['FEED_EXPORT_LOCATION'] && Dir.exist?(ENV['FEED_EXPORT_LOCATION']) && File.writable(ENV['FEED_EXPORT_LOCATION'])

site_rss = 'https://feeds.feedburner.com/Explosm'
feed_name = 'explosm'
rss_file = File.join(ENV['FEED_ONLINE_LOCATION'], "#{feed_name}.rss")

# get site rss feed
site_feed = RSS::Parser.parse(URI.parse(site_rss).open)
article_link = site_feed.items[0].link
article_title = site_feed.items[0].title
article_page = Nokogiri::HTML(URI.parse(article_link).open)
article_image = 'http:' + article_page.at('#main-comic').attr('src')

# create new feed (if it doesn't exist)
# or prepare existing one (checking if retried item is new)
if !File.file?(rss_file)
  tmp_feed = Nokogiri::XML::Builder.new do |xml|
    xml.rss('version' => '2.0') {
      xml.channel {
        xml.title 'Explosm'
        xml.link 'http://explosm.net/'
        xml.description 'Explosm comic with image'
      }
    }
  end
  rss_feed = Nokogiri::XML(tmp_feed.to_xml)
else
  rss_feed = Nokogiri::XML(File.open(rss_file))

  # abort if most recent item link is the same as the newly retrieved one
  # else save the most recent for later, and continue
  most_recent_item_link = rss_feed.at('item').at('link').content
  if (most_recent_item_link == article_link)
    puts 'There are no new items to add'
    exit 0
  else
    recent_items = rss_feed.css('item')[0..9] # save recent items
    rss_feed.css('item').remove # removes all items
  end
end

# add new item to feed
Nokogiri::XML::Builder.with(rss_feed.at('channel')) do |xml|
  xml.item {
    xml.title article_title
    xml.link article_link
    xml.description "<img src='#{article_image}'>"
  }
end

# add previously grabbed items (if any) and save
rss_feed.at('channel').add_child(recent_items) unless recent_items.nil?

File.open(rss_file, 'w') do |f|
  f.puts rss_feed.to_xml
end
