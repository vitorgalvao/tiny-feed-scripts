#!/usr/bin/env ruby

require 'nokogiri'
require 'open-uri'

site_url = 'https://www.youtube.com/playlist?list=PLxFjqypxm9lpx1ZBaKfXhON301mXS1WGE'
rss_file = ENV['HOME'] + '/public_html/vitorgalvao/feeds/bigfatquiz.rss'

# get new video
page = Nokogiri::HTML(URI.parse(site_url).open)
latest_video = page.css('tr').last
video_info = latest_video.at('.pl-video-title')
video_title = video_info.text.strip.gsub(%r{\n.*}, '')
video_link = 'https://youtube.com' + video_info.at('a').attr('href').sub(%r{&list=.+}, '')
video_description = 'This is a custom made RSS feed since the official one is insufficient. YouTube checks for new items to add to the feed from the top, but since this particular feed adds new items to the bottom rather than the top, YouTube stops at 15 videos and thinks no new ones are being added.'

# create new feed (if it doesn't exist)
# or prepare existing one (checking if retried item is new)
if !File.file?(rss_file)
  tmp_feed = Nokogiri::XML::Builder.new do |xml|
    xml.rss('version' => '2.0') {
      xml.channel {
        xml.title 'Big Fat Quiz'
        xml.link site_url
        xml.description 'RSS feed of Tobyâ€™s Big Fat Quiz YouTube playlist'
      }
    }
  end
  rss_feed = Nokogiri::XML(tmp_feed.to_xml)
else
  rss_feed = Nokogiri::XML(File.open(rss_file))

  # abort if most recent item title is the same as the newly retrieved one
  # else save the most recent for later, and continue
  most_recent_item_title = rss_feed.at('item').at('title').content
  if (most_recent_item_title == video_title)
    puts 'There are no new items to add'
    exit 0
  else
    recent_items = rss_feed.css('item')[0..9] # save recent items
    rss_feed.css('item').remove # removes all items
  end
end

# add new item to feed
Nokogiri::XML::Builder.with(rss_feed.at('channel')) do |xml|
  xml.item {
    xml.title video_title
    xml.link video_link
    xml.description video_description
  }
end

# add previously grabbed items (if any) and save
rss_feed.at('channel').add_child(recent_items) unless recent_items.nil?

File.open(rss_file, 'w') do |f|
  f.puts rss_feed.to_xml
end
